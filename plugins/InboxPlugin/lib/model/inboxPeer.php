<?php

/**
 * Skeleton subclass for performing query and update operations on the 'inbox' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Wed Aug  3 17:54:07 2011
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    plugins.InboxPlugin.lib.model
 */
class inboxPeer extends BaseinboxPeer {

    static public function getCountMessages(Criteria $criteria = null) {
        return self::doCount(self::addActiveMessagesCriteria($criteria));
    }

    static public function addActiveMessagesCriteria(Criteria $criteria = null) {
        if (is_null($criteria)) {
            $criteria = new Criteria();
        }

        $criteria->addDescendingOrderByColumn(self::CREATED_AT);

        return $criteria;
    }

    public static function getParentMessage($record_id=null) {
        $q = new Criteria();
        $q->add(InboxPeer::RECORD_ID, $record_id);
        $q->add(InboxPeer::REPLY, false);
        $parent = InboxPeer::doSelectOne($q);
        return $parent;

//        $q = Doctrine_Query::create()
//                ->from('Inbox c')
//                ->where('c.record_id = ?', $record_id)
//                ->andWhere('c.reply = ?', false);
//        return $q->fetchOne();
    }

    public static function getHasReply($record_id=null) {
        $q = Doctrine_Query::create()
                ->from('Inbox c')
                ->where('c.record_id = ?', $record_id)
                ->andWhere('c.reply = ?', true);
        return $q->count();
    }

    public static function activateReply($id=null) {
        $con = Propel::getConnection();
// select from...
        $c1 = new Criteria();
        $c1->add(self::ID, $id);

// update set
        $c2 = new Criteria();
        $c2->add(self::IS_ACTIVE, true);

        BasePeer::doUpdate($c1, $c2, $con);
    }

    public static function activateMessage($id=null) {

        $con = Propel::getConnection();

// select from...
        $c1 = new Criteria();
        $c1->add(self::ID, $id);

// update set
        $c2 = new Criteria();
        $c2->add(self::IS_ACTIVE, true);

        BasePeer::doUpdate($c1, $c2, $con);
    }

}

// inboxPeer
