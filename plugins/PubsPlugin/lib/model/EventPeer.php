<?php

/**
 * Skeleton subclass for performing query and update operations on the 'Event' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Fri Aug 12 18:23:23 2011
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    plugins.PubsPlugin.lib.model
 */
class EventPeer extends BaseEventPeer {

    public static function searchNear($coors, $params=array()) {
        $latMax = max(array($coors['latMin'], $coors['latMax']));
        $latMin = min(array($coors['latMin'], $coors['latMax']));
        $lngMax = max(array($coors['lngMin'], $coors['lngMax']));
        $lngMin = min(array($coors['lngMin'], $coors['lngMax']));
        $q = Doctrine_Query::create()
                ->from('Event e')
                ->leftJoin('e.User')
                ->where('e.latitude BETWEEN ? AND ?', array($latMin, $latMax))
                ->addWhere('e.longitude BETWEEN ? AND ?', array($lngMin, $lngMax))
                ->addWhere('e.is_active=?', 1)
                ->orderBy('date')
                ->addOrderBy('hour');
        foreach ($params as $param => $value) {
            $q->addWhere('e.' . $param . '=?', $value);
        }
        return $q->execute();
    }

    public static function searchDateRange($dates, $params=array()) {
        $q = Doctrine_Query::create()
                ->from('Event e')
                ->leftJoin('e.User')
                ->where('e.date BETWEEN ? AND ?', array($dates['min'], $dates['max']))
                ->addWhere('e.is_active=?', 1)
                ->orderBy('date')
                ->addOrderBy('hour');
        foreach ($params as $param => $value) {
            $q->addWhere('e.' . $param . '=?', $value);
        }
        return $q->execute();
    }

    public static function getEventsQuery($params=array()) {
        $q = Doctrine_Query::create()
                ->from('Event e')
                ->leftJoin('e.User')
                ->where('e.is_active=?', 1)
                ->orderBy('date')
                ->addOrderBy('hour');
        foreach ($params as $param => $value) {
            $q->addWhere('e.' . $param . '=?', $value);
        }
        return $q;
    }

    public static function getEvents($params=array()) {
        return self::getEventsQuery($params)->execute();
    }

}

// EventPeer
