<?php

/**
 * Skeleton subclass for performing query and update operations on the 'Notification' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Wed Aug 10 15:39:52 2011
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    plugins.PubsPlugin.lib.model
 */
class NotificationPeer extends BaseNotificationPeer {
    
    public static function retrieveById($id) {
        $c = new Criteria();
        $c->add(self::ID, $id);
        return self::doSelectOne($c);
    }
    
    public static function activate($id=null) {
        $con = Propel::getConnection();

        $c1 = new Criteria();
        $c1->add(self::ID, $id);

        $c2 = new Criteria();
        $c2->add(self::IS_ACTIVE, true);

        BasePeer::doUpdate($c1, $c2, $con);
    }
    
     public static function getNoti($model=null, $id=null, $user=null, $dest=null, $related_model=null) {
        $c2 = new Criteria();
        $c2->add(self::USER_ID, $user);
        $c2->add(self::DEST_USER_ID, $dest);
        $c2->add(self::RECORD_MODEL, $model);
        $c2->add(self::RECORD_ID, $id);
        $c2->add(self::RELATED_MODEL, $related_model);
        return self::doSelectOne($c2);
        
    }
    
    public static function insertNotification($user=null, $dest=null, $model=null, $id=null, $related_model=null, $date=null) {
        $noti = NotificationPeer::getNoti($model, $id, $user, $dest, $related_model);
        if (!$noti){
            $not = new Notification();
            $not->setUserId($user);
            $not->setDestUserId($dest);
            $not->setRecordModel($model);
            $not->setRecordId($id);
            $not->setRelatedModel($related_model);
            $not->setCreatedAt($date);
            //guardo el objeto
            $not->save();
        }
    }
    
    

}

// NotificationPeer
